<stack>
  <description brief="shadow_robot">

  This stack regroups the different ros interfaces developped for Shadow Robot's
  Hardware. It provides an interface to both simulated and real hardware.

  </description>
  <author>Maintained by Ugo Cupcic: ugo@shadowrobot.com, contact@shadowrobot.com</author>
  <license>BSD,GPL</license>  
  <review status="unreviewed" notes=""/>
  <url>http://ros.org/wiki/shadow_robot</url>
  <depend stack="arm_navigation" /> <!-- kinematics_msgs, arm_navigation_msgs -->
  <depend stack="bullet" /> <!-- bullet -->
  <depend stack="common" /> <!-- actionlib -->
  <depend stack="common_msgs" /> <!-- nav_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs -->
  <depend stack="diagnostics" /> <!-- self_test, diagnostic_updater, diagnostic_aggregator -->
  <depend stack="diagnostics_monitors" /> <!-- robot_monitor -->
  <depend stack="driver_common" /> <!-- dynamic_reconfigure -->
  <depend stack="geometry" /> <!-- tf, angles, tf_conversions -->
  <depend stack="image_common" /> <!-- polled_camera, image_transport -->
  <depend stack="object_manipulation" /> <!-- object_manipulator, object_manipulation_msgs -->
  <depend stack="physics_ode" /> <!-- opende -->
  <depend stack="pluginlib" /> <!-- pluginlib -->
  <depend stack="pr2_common" /> <!-- pr2_msgs -->
  <depend stack="pr2_controllers" /> <!-- pr2_mechanism_controllers, robot_mechanism_controllers, control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism" /> <!-- pr2_controller_manager, pr2_hardware_interface, pr2_controller_interface, realtime_tools, pr2_mechanism_model -->
  <depend stack="pr2_simulator" /> <!-- pr2_gazebo_plugins -->
  <depend stack="robot_model" /> <!-- robot_state_publisher, urdf, kdl_parser -->
  <depend stack="ros" /> <!-- roslib -->
  <depend stack="ros_comm" /> <!-- rosconsole, std_srvs, roscpp, xmlrpcpp, std_msgs, rospy -->
  <depend stack="simulator_gazebo" /> <!-- gazebo, gazebo_tools, gazebo_msgs, gazebo_plugins, gazebo_worlds -->
  <depend stack="vision_opencv" /> <!-- opencv2, cv_bridge -->
  <depend stack="visualization" /> <!-- rviz -->

</stack>
